name: Lectura de variables desde YMAL

on:
  push:
    branches:
      - main

jobs:
  Lectura_YAML:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3
        
      - name: Descargar yq # Referencia: https://github.com/mikefarah/yq
        # 1) Descargar el archivo tar.gz
        # 2) Extraer el archivo .tar.gz al directorio de trabajo actual
        # 3) Moverlo a /usr/local/bin/
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64.tar.gz
          tar xf yq_linux_amd64.tar.gz
          mv yq_linux_amd64 /usr/local/bin/
        
      - name: Leer variables del archivo my_vars.yml
        id: vars
        run: |
          echo "::set-output name=var1::$(cat my_vars.yml | yq eval '.variables.var1' -)"
        
      - name: Usar las variables en otro paso
        run: |
          echo "La variable var1 es ${{ steps.vars.outputs.var1 }}"

        #############################
        # Diccoinario o propiedades #
        #############################

      - name: Leer variables del archivo config_vars.yml
        id: dict
        run: |
          echo "::set-output name=clave1::$(cat config_vars.yml | yq eval '.mi_diccionario.clave1' -r)"
          echo "::set-output name=subclave1::$(cat config_vars.yml | yq eval '.mi_diccionario.clave2.subclave1' -r)"
          echo "::set-output name=subclave2::$(cat config_vars.yml | yq eval '.mi_diccionario.clave2.subclave2' -r)"
          echo "{clave3}={$(cat config_vars.yml | yq eval '.mi_diccionario.clave3' -r)}" >> $GITHUB_OUTPUT
        
      - name: Usar las variables como mi_diccionario en otro paso
        run: |
          echo "Valor de clave1: ${{ steps.dict.outputs.clave1 }}"
          echo "Valor de clave2.subclave1: ${{ steps.dict.outputs.subclave1 }}"
          echo "Valor de clave2.subclave2: ${{ steps.dict.outputs.subclave2 }}"
          echo "Valor de clave3: ${{ steps.dict.outputs.clave1 }}"

      ##########################################################################################

